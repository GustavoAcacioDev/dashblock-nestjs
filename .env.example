# Database Configuration
DATABASE_URL="postgresql://postgres:password@localhost:5432/dashblock"

# JWT Authentication
# REQUIRED: Must be at least 32 characters
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET="your-super-secret-jwt-key-min-32-chars-CHANGE-THIS-IN-PRODUCTION"
JWT_EXPIRATION="7d"

# Encryption for SSH passwords, RCON passwords, and sensitive data
# REQUIRED: Must be at least 32 characters
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
ENCRYPTION_KEY="your-encryption-key-min-32-chars-CHANGE-THIS-IN-PRODUCTION"

# Server Configuration
PORT=3000
NODE_ENV=development

# Frontend URL (for CORS configuration)
FRONTEND_URL="http://localhost:3001"

# =============================================================================
# PRODUCTION SECURITY CHECKLIST
# =============================================================================
# Before deploying to production, ensure:
# 1. ✅ DATABASE_URL uses strong password and SSL connection
# 2. ✅ JWT_SECRET is a cryptographically random 32+ character string
# 3. ✅ ENCRYPTION_KEY is a cryptographically random 32+ character string
# 4. ✅ NODE_ENV is set to "production"
# 5. ✅ FRONTEND_URL is set to your actual frontend domain
# 6. ✅ Never commit actual secrets to git (use .env.local or secrets manager)
#
# Generate secure keys:
#   node -e "console.log('JWT_SECRET=' + require('crypto').randomBytes(32).toString('hex'))"
#   node -e "console.log('ENCRYPTION_KEY=' + require('crypto').randomBytes(32).toString('hex'))"
